/*
 * user_heap_spraying_attack.s - User-Mode Heap Spraying Attack
 *
 * Fully functional version: This module allocates many small memory regions via mmap,
 * fills each with a defined pattern (0x41), and then leaves them allocated.
 * This demonstrates a heap spraying technique.
 *
 * Syscalls used: mmap (222), write (64), exit (93).
 */
 
.section .data
spray_msg:
    .asciz "Heap spraying complete\n"
 
.section .text
.global main
main:
    mov w0, #0         /* Loop counter */
spray_loop:
    /* Allocate 128 bytes of RWX memory */
    mov x0, 0
    mov x1, #128
    mov x2, #7       /* PROT_READ|PROT_WRITE|PROT_EXEC */
    mov x3, #0x22    /* MAP_PRIVATE|MAP_ANONYMOUS */
    mov x4, #-1
    mov x5, 0
    mov x8, #222
    svc 0            /* Allocated region pointer in x0 */
    /* Fill allocated region with pattern 0x41 */
    mov x20, x0      /* Save allocated pointer */
    mov w1, #128
fill_loop:
    mov w2, #0x41
    strb w2, [x20], #1
    subs w1, w1, #1
    bne fill_loop
    /* Continue for 10 iterations */
    add w0, w0, #1
    cmp w0, #10
    blt spray_loop
    /* Log a success message */
    mov x0, #1
    adr x1, spray_msg
    mov x2, #25      /* message length */
    mov x8, #64
    svc 0
    /* Exit */
    mov x0, #0
    mov x8, #93
    svc 0
